ALGORITHM Distinct_Algo_1stsolution
VAR
    array1 : ARRAY_OF INTEGER[10];
    array2 : ARRAY_OF INTEGER[15];
    i:= INTEGER= 0;
    j:= INTEGER= 0;
    sum:= INTEGER= 0;
    b:=BOOLEAN;
BEGIN
    FOR i FROM 0 TO length.array1 STEP step  DO
        Write("Enter number array1", array1[i]);
        Read(array1[i]);
    END_FOR
    FOR j FROM 0 TO length.array2 STEP step  DO
        Write("Enter number array2", array2[j]);
        Read(array2[j]);
    END_FOR
    FOR i FROM 0 TO length.array1 STEP step  DO
        b:= true;
        FOR j FROM 0 TO length.array2 STEP step  DO
            IF(array1[i]= array2[j]) THEN
            b := false;
            END_IF

        END_FOR
        IF (b= true) THEN
        sum := sum+array1[i];
        END_IF
    END_FOR
    FOR j FROM 0 TO length.array[j] STEP step  DO
        b:= true;
        FOR i FROM 0 TO length.array[i] STEP step  DO
            IF (array2[j]=array1[i]) THEN
            b:=false;
            END_IF
        END_FOR
        IF (b=true) THEN
        sum:=sum+array2[j]
        END_IF
    END_FOR
END

       // *********** 2nd solution Hashtable*******************

ALGORITHM Distinct_Algo_2ndsolution
VAR
    array1 : ARRAY_OF INTEGER[10];
    array2 : ARRAY_OF INTEGER[15];
    i:INTEGER:= 0;
    j: INTEGER:=0;
    // test:=BOOLEAN= false;
    count:INTEGER:= 1;
    hash:HASH_TABLE<INTEGER,INTEGER>;
    d:INTEGER:=0;
    t: ARRAY_OF INTEGER[10];
    sum: INTEGER:=0;

BEGIN
    FOR i FROM 0 TO array1.length-1 STEP step  DO
        // test:= true;
        hash.insert(array1[i],count);
        // IF (hash.lookup(t[i]= true)) THEN
        //     count:= hash.get(t[i]);
        //     hash.insert(t[i], count+1);
        // END_IF
    END_FOR
    FOR j FROM 0 TO array2.length-1 STEP step  DO
        // test:= true;
        // hash.insert(t[j],count);
        // IF (hash.lookup(t[j]=true)) THEN
        IF (hash.lookup(array2[j])=true) THEN
            count:= hash.get(array2[j]);
            hash.insert(array2[j], count+1);

        ELSE 
            hash.insert(array2[j],1)    
        END_IF
    END_FOR
    t:= hash.getkeys()
    FOR d FROM 0 TO t.length-1 STEP step  DO
        IF (hash.get(t[d])=1) THEN
            sum= sum + t[d]
        END_IF
    END_FOR
END




// ****************** Sum of overlapping elements ********************

ALGORITHM Sum_of_overlapping_elements_1stsolution
VAR
    array1 : ARRAY_OF INTEGER[10];
    array2 : ARRAY_OF INTEGER[15];
    i:= INTEGER= 0;
    j:= INTEGER= 0;
    sum:= INTEGER= 0;
    b:=BOOLEAN;
BEGIN
    FOR i FROM 0 TO array.length-1 STEP step  DO
        Write("Enter number please");
        Read(array1[i]);
    END_FOR
    FOR j FROM 0 TO array2.length-1 STEP step  DO
        Write("Enter number please");
        Read(array[j]);
    END_FOR
    FOR i FROM 0 TO array1[i].length-1 STEP step  DO
        b:= true;
        FOR j FROM 0 TO array2[j].length-1 STEP step  DO
            IF (array1[i]=array2[j]) THEN
                b:= false;
            END_IF
        END_FOR
        IF (b=false) THEN
            sum:= sum + array1[i]*2;
        END_IF
    END_FOR
END

// **************** 2nd solution ***********************

ALGORITHM Sum_of_overlapping_elements_2ndsolution
VAR
    array1 : ARRAY_OF INTEGER[10];
    array2 : ARRAY_OF INTEGER[15];
    i:INTEGER:= 0;
    j: INTEGER:=0;
    count:INTEGER:= 1;
    hash:HASH_TABLE<INTEGER,INTEGER>;
    d:INTEGER:=0;
    t: ARRAY_OF INTEGER[10];
    sum: INTEGER:=0;
BEGIN
     FOR i FROM 0 TO array1.length-1 STEP step  DO
        hash.insert(array1[i],count);
    END_FOR
    FOR j FROM 0 TO array2.length-1 STEP step  DO
        IF (hash.lookup(array2[j])=true) THEN
            count:= hash.get(array2[j]);
            hash.insert(array2[j], count+1);

        ELSE 
            hash.insert(array2[j],1)    
        END_IF
    END_FOR
    t:= hash.getkeys()
    FOR d FROM 0 TO t.length-1 STEP step  DO
        IF (hash.get(t[d])>1) THEN
            sum= sum + t[d];
        END_IF
    END_FOR
END
